
{{- $gunicornSettings := dict "Values" .Values "name" "gunicorn-deployment" "app" "gunicorn" "selector" "webServer: \"yes\""  "command" "[gunicorn]" "args" "[\"--workers\", \"3\", \"--worker-connections\", \"100\", \"--max-requests\", \"10000\", \"--worker-class=gevent\", \"--timeout\", \"600\",\"--reload\", \"-b\", \":8000\", \"--access-logfile='-'\", \"--statsd-host=tator-prometheus-statsd-exporter:9125\", \"--access-logformat='%(h)s %(l)s %(u)s %(t)s \\\"%(r)s\\\" %(s)s %(b)s \\\"%(f)s\\\" \\\"%(p)s\\\" \\\"%(D)s\\\"'\", \"tator_online.wsgi\"]" "init" "[echo]" "replicas" .Values.hpa.gunicornMinReplicas }}
{{include "tator.template" $gunicornSettings }}
---
{{- if .Values.maintenanceCron.enabled }}
{{- $sizerSettings := dict "Values" .Values "name" "sizer-cron" "app" "sizer" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"updateprojects\"]" "schedule" "10 * * * *"  }}
{{include "tatorCron.template" $sizerSettings }}
---
{{- $tempSettings := dict "Values" .Values "name" "prune-temp-cron" "app" "prune-temp" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunetemporaryfiles\"]" "schedule" "20 * * * *" }}
{{include "tatorCron.template" $tempSettings }}
---
{{- $mediaSettings := dict "Values" .Values "name" "prune-media-cron" "app" "prune-media" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunemedia\"]" "schedule" "30 0 * * *" }}
{{include "tatorCron.template" $mediaSettings }}
---
{{- $localizationSettings := dict "Values" .Values "name" "prune-localizations-cron" "app" "prune-localizations" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunelocalizations\"]" "schedule" "30 1 * * *" }}
{{include "tatorCron.template" $localizationSettings }}
---
{{- $stateSettings := dict "Values" .Values "name" "prune-states-cron" "app" "prune-states" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunestates\"]" "schedule" "30 2 * * *" }}
{{include "tatorCron.template" $stateSettings }}
---
{{- $leafSettings := dict "Values" .Values "name" "prune-leaves-cron" "app" "prune-leaves" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"pruneleaves\"]" "schedule" "30 3 * * *" }}
{{include "tatorCron.template" $leafSettings }}
---
{{- $filebeatSettings := dict "Values" .Values "name" "prune-filebeat-cron" "app" "prune-filebeat" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunefilebeat\"]" "schedule" "40 4 * * *" }}
{{include "tatorCron.template" $filebeatSettings }}
---
{{- $fileSettings := dict "Values" .Values "name" "prune-files-cron" "app" "prune-files" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"prunefiles\"]" "schedule" "30 1 * * *" }}
{{include "tatorCron.template" $fileSettings }}
---
{{- $backupSettings := dict "Values" .Values "name" "backup-cron" "app" "backup" "selector" "webServer: \"yes\"" "command" "[/bin/sh]" "args" "[\"-c\", \"pg_dump -Fc -h $POSTGRES_HOST -U $POSTGRES_USERNAME -d tator_online -f /backup/tator_online_$(date +%Y_%m_%d__%H_%M_%S)_$(GIT_VERSION).sql;\"]" "schedule" "40 6 * * *" }}
{{include "dbCron.template" $backupSettings }}
---
{{- $moveBackupSettings := dict "Values" .Values "name" "move-backup-cron" "app" "move-backup" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"movebackups\"]" "schedule" "40 18 * * *"  }}
{{include "tatorCron.template" $moveBackupSettings }}
---
{{- $archiveSettings := dict "Values" .Values "name" "archive-media-cron" "app" "archive-media" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"archivemedia\"]" "schedule" "40 0 * * *" }}
{{include "tatorCron.template" $archiveSettings }}
---
{{- $backupMediaSettings := dict "Values" .Values "name" "backup-media-cron" "app" "backup-media" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"backupresources\"]" "schedule" "0 1 * * *" }}
{{include "tatorCron.template" $backupMediaSettings }}
---
{{- $requestSettings := dict "Values" .Values "name" "request-restore-cron" "app" "request-restore" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"requestrestoration\"]" "schedule" "40 1 * * *" }}
{{include "tatorCron.template" $requestSettings }}
---
{{- $finishSettings := dict "Values" .Values "name" "finish-restore-cron" "app" "finish-restore" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"finishrestoration\"]" "schedule" "50 1 * * *" }}
{{include "tatorCron.template" $finishSettings }}
---
{{- $expireSettings := dict "Values" .Values "name" "expire-invitations-cron" "app" "expire-invitations" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"expireinvitations\"]" "schedule" "50 2 * * *" }}
{{include "tatorCron.template" $expireSettings }}
---
{{- $expireAnnouncementSettings := dict "Values" .Values "name" "expire-announcements-cron" "app" "expire-announcements" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"expireannouncements\"]" "schedule" "50 3 * * *" }}
{{include "tatorCron.template" $expireAnnouncementSettings }}
---
{{- $expirePasswordResetSettings := dict "Values" .Values "name" "expire-password-resets-cron" "app" "expire-password-resets" "selector" "webServer: \"yes\""  "command" "[python3]" "args" "[\"manage.py\", \"expirepasswordresets\"]" "schedule" "40 * * * *" }}
{{include "tatorCron.template" $expirePasswordResetSettings }}
---
{{- end }}
{{- if .Values.requireHttps }}
{{- if .Values.certCron.enabled }}
{{- $certSettings := dict "Values" .Values "name" "cert-cron" "app" "cert" "selector" "webServer: \"yes\""  "command" "[bash]" "args" "[\"-c\", \"scripts/cert/letsencrypt.sh\"]" "schedule" "50 5 15 * *" "domain" .Values.domain }}
{{- if hasKey .Values "tlsCertFile" }}
{{ $_ := set $certSettings "tlsCertFile" .Values.tlsCertFile }}
{{- end }}
{{- if hasKey .Values "tlsKeyFile" }}
{{ $_ := set $certSettings "tlsKeyFile" .Values.tlsKeyFile }}
{{- end }}
{{- if hasKey .Values "tlsCertSecretName" }}
{{ $_ := set $certSettings "tlsCertSecretName" .Values.tlsCertSecretName }}
{{- end }}
{{- if hasKey .Values "tlsKeySecretName" }}
{{ $_ := set $certSettings "tlsKeySecretName" .Values.tlsKeySecretName }}
{{- end }}
{{include "tatorCron.template" $certSettings }}
---
{{- if hasKey .Values "aliases" }}
{{ range .Values.aliases }}
{{- $name := printf "cert-cron-%s" .tlsKeySecretName }}
{{- $certSettings := dict "Values" $.Values "name" $name "app" "cert" "selector" "webServer: \"yes\""  "command" "[bash]" "args" "[\"-c\", \"scripts/cert/letsencrypt.sh\"]" "schedule" "50 5 16 * *" "domain" .domain "tlsCertFile" .tlsCertFile "tlsKeyFile" .tlsKeyFile "tlsCertSecretName" .tlsCertSecretName "tlsKeySecretName" .tlsKeySecretName }}
{{include "tatorCron.template" $certSettings }}
---
{{- end }}
{{- end }}
{{- if hasKey .Values "redirects" }}
{{- range .Values.redirects }}
{{- $name := printf "cert-cron-%s" .tlsKeySecretName }}
{{- $certSettings := dict "Values" $.Values "name" $name "app" "cert" "selector" "webServer: \"yes\""  "command" "[bash]" "args" "[\"-c\", \"scripts/cert/letsencrypt.sh\"]" "schedule" "50 5 16 * *" "domain" .domain "tlsCertFile" .tlsCertFile "tlsKeyFile" .tlsKeyFile "tlsCertSecretName" .tlsCertSecretName "tlsKeySecretName" .tlsKeySecretName }}
{{include "tatorCron.template" $certSettings }}
---
{{- end }}
{{- end }}
{{- end }}
{{- end }}
