from .email import email_spec

job_node = {
    'type': 'object',
    'description': 'Represents a step or node (for DAGs) in a job.',
    'properties': {
        'id': {
            'description': 'Unique identifier of the job node.',
            'type': 'string',
        },
        'children': {
            'type': 'array',
            'items': {
                'description': 'ID of child node.',
                'type': 'string',
            },
        },
        'task': {
            'description': 'Name of task performed by this node.',
            'type': 'string',
        },
        'status': {
            'description': 'Status of this node.',
            'type': 'string',
        },
        'start_time': {
            'description': 'Start time of this node.',
            'type': 'string',
            'nullable': True,
            'format': 'date-time',
        },
        'stop_time': {
            'description': 'Stop time of this node.',
            'type': 'string',
            'nullable': True,
            'format': 'date-time',
        },
    }
}

algorithm_parameter = {
    'type': 'object',
    'required': ['name', 'value'],
    'properties': {
        'name': {
            'description': 'Name of algorithm parameter',
            'type': 'string',
        },
        'value': {
            'description': 'Value of algorithm parameter',
            'oneOf': [
                {'type': 'number'},
                {'type': 'string'},
            ],
        },
    },
}

job_spec = {
    'type': 'object',
    'required': ['algorithm_name', 'media_ids'],
    'properties': {
        'algorithm_name': {
            'description': 'Name of the algorithm to execute.',
            'type': 'string',
        },
        'media_ids': {
            'description': 'List of media IDs.',
            'type': 'array',
            'items': {'type': 'integer'},
        },
        'extra_params': {
            'description': 'Extra parameters to pass into the algorithm',
            'type': 'array',
            'items': {'$ref': '#/components/schemas/AlgorithmParameter'},
        },
        'success_email_spec': {
            **email_spec,
            'nullable': True,
        },
        'failure_email_spec': {
            **email_spec,
            'nullable': True,
        },
    },
}

job = {
    'type': 'object',
    'properties': {
        'id': {
            'description': 'Unique identifier of the job generated by Argo.',
            'type': 'string',
        },
        'uid': {
            'description': 'Unique ID of the job.',
            'type': 'string',
        },
        'gid': {
            'description': 'Group ID of the job.',
            'type': 'string',
        },
        'user': {
            'description': 'Unique integer identifying user who submitted the job.',
            'type': 'integer',
        },
        'project': {
            'description': 'Unique integer identifying a project.',
            'type': 'integer',
        },
        'nodes': {
            'type': 'array',
            'items': {'$ref': '#/components/schemas/JobNode'},
        },
        'status': {
            'description': 'Status of this job.',
            'type': 'string',
        },
        'start_time': {
            'description': 'Start time of this job.',
            'type': 'string',
            'nullable': True,
            'format': 'date-time',
        },
        'stop_time': {
            'description': 'Stop time of this job.',
            'type': 'string',
            'nullable': True,
            'format': 'date-time',
        },
    },
}
