.d-block {
  display: block;
}

.d-flex {
  display: flex;
}

.d-inline-flex {
  display: inline-flex;
}

.flex-row {
  flex-direction: row;
}

.flex-column {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-grow {
  flex-grow: 1;
}

.flex-justify-center {
  justify-content: center;
}

.flex-justify-between {
  justify-content: space-between;
}

.flex-justify-right {
  justify-content: flex-end;
}

.flex-items-center {
  align-items: center;
}

.position-relative {
  position: relative;
}

.position-absolute {
  position: absolute;
}

// Vertical align
.v-align-top {
  vertical-align: top;
}

// Supports for float-based grids
.float-left {
  float: left;
}

.float-right {
  float: right;
}

// Rounded edges
.rounded-1 {
  border-radius: 3px;
}

.rounded-2 {
  border-radius: 6px;
}

.rounded-3 {
  border-radius: 10px;
}

.rounded-bottom-2 {
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
}

.circle {
  border-radius: 50%;
}

// Border utilities
.bottom-border {
  border-bottom: 1px solid $color-charcoal--light;
}
.top-border {
  border-top: 1px solid $color-charcoal--light;
}

/*
* Padding
*/

.py-0 {
  padding-bottom: $spacing-0;
  padding-top: $spacing-0;
}

.py-1 {
  padding-bottom: $spacing-1;
  padding-top: $spacing-1;
}

.py-2 {
  padding-bottom: $spacing-2;
  padding-top: $spacing-2;
}

.py-3 {
  padding-bottom: $spacing-3;
  padding-top: $spacing-3;
}

.py-4 {
  padding-bottom: $spacing-4;
  padding-top: $spacing-4;
}

.py-5 {
  padding-bottom: $spacing-5;
  padding-top: $spacing-5;
}

.py-6 {
  padding-bottom: $spacing-6;
  padding-top: $spacing-6;
}

.pt-4 {
  padding-top: $spacing-4;
}


.pb-2 {
  padding-bottom: $spacing-2;
}

.pb-3 {
  padding-bottom: $spacing-3;
}

.pr-2 {
  padding-right: $spacing-2;
}

.px-0 {
  padding-left: $spacing-0;
  padding-right: $spacing-0;
}

.px-1 {
  padding-left: $spacing-1;
  padding-right: $spacing-1;
}

.px-2 {
  padding-left: $spacing-2;
  padding-right: $spacing-2;
}

.px-3 {
  padding-left: $spacing-3;
  padding-right: $spacing-3;
}

.px-4 {
  padding-left: $spacing-4;
  padding-right: $spacing-4;
}

.px-5 {
  padding-left: $spacing-5;
  padding-right: $spacing-5;
}

.px-6 {
  padding-left: $spacing-6;
  padding-right: $spacing-6;
}

// Margins R, L, X, Y, Top, Bottom
.mr-1 {
  margin-right: $spacing-1;
}

.mr-2 {
  margin-right: $spacing-2;
}

.mr-3 {
  margin-right: $spacing-3;
}

.mr-6 {
  margin-right: $spacing-6;
}

.ml-1 {
  margin-left: $spacing-1;
}

.ml-2 {
  margin-right: $spacing-2;
}

.ml-3 {
  margin-left: $spacing-3;
}

.ml-6 {
  margin-left: $spacing-6;
}

.mx-3 {
  margin-left: $spacing-3;
  margin-right: $spacing-3;
}

.mx-6 {
  margin-left: $spacing-6;
  margin-right: $spacing-6;
}

.my-2 {
  margin-top: $spacing-2;
  margin-bottom: $spacing-2;
}

.my-3 {
  margin-top: $spacing-3;
  margin-bottom: $spacing-3;
}

.my-6 {
  margin-top: $spacing-6;
  margin-bottom: $spacing-6;
}

.mt-3 {
  margin-top: $spacing-3;
}

.mt-4 {
  margin-top: $spacing-4;
}

.mt-5 {
  margin-top: $spacing-5;
}

.mt-6 {
  margin-top: $spacing-6;
}

.mb-2 {
  margin-bottom: $spacing-2;
}

.mb-3 {
  margin-bottom: $spacing-3;
}

.mb-4 {
  margin-bottom: $spacing-4;
}

.mb-6 {
  margin-bottom: $spacing-6;
}

//
.btn-clear {
  background-color: transparent;
  border: none;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  text-align: inherit;
}

.height-full {
  height: 100%;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

// Responsive media queries
@mixin breakpoint($breakpoint) {
  @if $breakpoint == "" {
    @content;
  } @else {
    // Retrieves the value from the key
    $value: map-get($breakpoints, $breakpoint);

    // If the key exists in the map
    @if $value != null {
      // Prints a media query based on the value
      @media (min-width: $value) {
        @content;
      }
    }

    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }
  }
}

// Retina media query

@mixin retina-media-query {
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-moz-min-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    @content;
  }
}

// Clearfix
//
// Clears floats via mixin.
.clearfix {
  &::before {
    display: table;
    content: "";
  }

  &::after {
    display: table;
    clear: both;
    content: "";
  }
}

/*
* Responsive Grid
*/
.col-1 {
  width: (1 / 12 * 100%);
}
.col-2 {
  width: (2 / 12 * 100%);
}
.col-3 {
  width: (3 / 12 * 100%);
}
.col-4 {
  width: (4 / 12 * 100%);
}
.col-5 {
  width: (5 / 12 * 100%);
}
.col-6 {
  width: (6 / 12 * 100%);
}
.col-7 {
  width: (7 / 12 * 100%);
}
.col-8 {
  width: (8 / 12 * 100%);
}
.col-9 {
  width: (9 / 12 * 100%);
}
.col-10 {
  width: (10 / 12 * 100%);
}
.col-11 {
  width: (11 / 12 * 100%);
}
.col-12 {
  width: 100% !important;
}

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    .col-#{$breakpoint}-1 {
      width: (1 / 12 * 100%);
    }
    .col-#{$breakpoint}-2 {
      width: (2 / 12 * 100%);
    }
    .col-#{$breakpoint}-3 {
      width: (3 / 12 * 100%);
    }
    .col-#{$breakpoint}-4 {
      width: (4 / 12 * 100%);
    }
    .col-#{$breakpoint}-5 {
      width: (5 / 12 * 100%);
    }
    .col-#{$breakpoint}-6 {
      width: (6 / 12 * 100%);
    }
    .col-#{$breakpoint}-7 {
      width: (7 / 12 * 100%);
    }
    .col-#{$breakpoint}-8 {
      width: (8 / 12 * 100%);
    }
    .col-#{$breakpoint}-9 {
      width: (9 / 12 * 100%);
    }
    .col-#{$breakpoint}-10 {
      width: (10 / 12 * 100%);
    }
    .col-#{$breakpoint}-11 {
      width: (11 / 12 * 100%);
    }
    .col-#{$breakpoint}-12 {
      width: 100%;
    }
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    .py-#{$breakpoint}-5 {
      padding-top: $spacing-5;
      padding-bottom: $spacing-5;
    }
    .py-#{$breakpoint}-6 {
      padding-top: $spacing-6;
      padding-bottom: $spacing-6;
    }
    .px-#{$breakpoint}-6 {
      padding-left: $spacing-6;
      padding-right: $spacing-6;
    }
    .pl-#{$breakpoint}-6 {
      padding-left: 40px;
    }
  }
}

@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    .offset-#{$breakpoint}-1 {
      margin-left: (1 / 12 * 100%);
    }
    .offset-#{$breakpoint}-2 {
      margin-left: (2 / 12 * 100%);
    }
    .offset-#{$breakpoint}-3 {
      margin-left: (3 / 12 * 100%);
    }
    .offset-#{$breakpoint}-4 {
      margin-left: (4 / 12 * 100%);
    }
  }
}

.offset-col-4 {
  margin-left: (4 / 12 * 100%);
}

// Hide utilities
.hidden {
  display: none;
  opacity: 0;
  transition: 500ms ease opacity;
}

// Each hide utility only applies to one breakpoint range.
@media (max-width: $width-sm - 1px) {
  .hide-sm {
    display: none !important;
  }
}

@media (min-width: $width-sm) and (max-width: $width-md - 1px) {
  .hide-md {
    display: none !important;
  }
}

@media (min-width: $width-md) and (max-width: $width-lg - 1px) {
  .hide-lg {
    display: none !important;
  }
}

@media (min-width: $width-lg) {
  .hide-xl {
    display: none !important;
  }
}
